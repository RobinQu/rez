// Generated by CoffeeScript 1.6.2
(function() {
  var GravityMaps, Processor, im, microtime, path;

  im = require("imagemagick");

  path = require("path");

  microtime = require("microtime");

  GravityMaps = {
    n: "North",
    s: "South",
    w: "West",
    e: "East",
    nw: "NorthWest",
    ne: "NorthEast",
    sw: "SouthWest",
    se: "SouthEast",
    c: "Center"
  };

  Processor = (function() {
    function Processor() {}

    Processor.get = function() {
      return this.instance = new Processor;
    };

    Processor.prototype.identify = function(fp, cb) {
      return im.identify(fp, cb);
    };

    Processor.prototype.handle = function(data, cb) {
      var dest, fp, mode, options, quality;

      options = data.parameters;
      mode = options.mode || "crop";
      dest = data.dest;
      fp = data.fp;
      quality = options.quality || 0.8;
      return this.identify(fp, function(e, features) {
        var callback, h, w, _ref;

        if (e) {
          console.error("unable to recongnize source image file");
          return cb(e);
        } else {
          callback = function(e) {
            if (e) {
              return cb(e);
            } else {
              return cb(null, {
                dest: dest,
                identity: features
              });
            }
          };
          switch (mode) {
            case "resize":
              if (options.width || options.height) {
                return im.resize({
                  srcPath: fp,
                  dstPath: dest,
                  quality: quality,
                  width: options.width || 0,
                  height: options.height || 0
                }, callback);
              } else {
                return cb(new Error("missing parameter width or height"));
              }
              break;
            case "crop":
              if (options.resize) {
                _ref = options.resize.toLowerCase().split("x"), w = _ref[0], h = _ref[1];
              }
              if (options.width) {
                w = options.width;
              }
              if (options.width) {
                h = options.width;
              }
              if (w && h) {
                return im.crop({
                  srcPath: fp,
                  dstPath: dest,
                  width: w,
                  height: h,
                  quality: quality,
                  gravity: GravityMaps[options.graivity || "n"]
                }, callback);
              } else {
                return cb(new Error("missing parameter `resize`"));
              }
          }
        }
      });
    };

    return Processor;

  })();

  module.exports = Processor;

}).call(this);
